@{
    ViewData["Title"] = "Home Page";
}
<div class="page-header">
    <h1>Finalcial Chat <small> Jobsity Test</small></h1>
</div>
<div class="container row" id="app">
    <div class="col-md-6" v-if="!isLoggedIn">
        <ul class="nav nav-tabs">
            <li v-bind:class="{ 'active' : !showRegister}" ><a v-on:click="ShowLogin">Login</a></li>
            <li v-bind:class="{ 'active' : showRegister}"><a v-on:click="ShowRegister">Register</a></li>
        </ul>
        <div class="tab-content">
            <div v-if="showRegister">
                <div class="form-group">
                    <label>Username</label>
                    <input v-model="username" class="form-control" />
                </div>
                <div class="form-group">
                    <label>email</label>
                    <input v-model="email" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <input v-model="password" type="password" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Confirm Password</label>
                    <input v-model="confirmPassword" type="password" class="form-control" />
                </div>
                <div>
                    <button class="btn btn-primary" v-on:click="Register">Register</button>
                </div>
            </div>
            <div v-if="!showRegister">
                <div class="form-group">
                    <label>Username</label>
                    <input v-model="username" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <input v-model="password" type="password" class="form-control" />
                </div>
                <div>
                    <button class="btn btn-primary" v-on:click="Login">Login</button>
                </div>
            </div>
        </div>
    </div>
    <div v-if="isLoggedIn">
        <div class="col-md-4">
            <div class="form-group">
                <label>Message</label>
                <textarea v-model="message" class="form-control"></textarea>
            </div>
            <div>
                <button class="btn btn-primary" v-on:click="pressSendButton">Send</button>
            </div>

        </div>
        <div class="col-md-8">
            <div class="panel row" v-for="message in messageList" v-bind:class="{ 'panel-primary' : message.IsUserMessage, 'panel-success' : !message.IsUserMessage }">
                <div class="panel-heading"><strong class="col-md-9">{{message.username}}</strong><small>{{message.sendDate}}</small></div>
                <div class="panel-body">
                    {{message.message}}
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var app = new Vue({
        el: '#app',
        data: {
            message: '',
            messageList: [],
            isLoggedIn: false,
            showRegister: false,
            username: '',
            password: '',
            email: '',
            confirmPassword:''
        },
        methods: {
            getChatMessages: function () {
                $.get('/api/chat/GetLastMessages')
                    .then(messageArray => {
                        this.messageList.push(...messageArray.map(x => {
                            x.sendDate = new Date(x.sendDate).toLocaleString("en-US");
                            x.IsUserMessage = true;
                            return x;
                        }));
                    })
            },
            sendMessage: function () {
                this.postData('/api/chat/SendMessage', { Message: this.message })
                    .then(messageResult => {
                        this.message = '';
                    });
            },
            sendCommand: function () {
                let stockCode = this.message.split('=')[1];
                $.get('/api/chat/GetStock', { StockCode: stockCode })
                    .then(messageResult => {
                        this.message = '';
                    });
            },
            pressSendButton: function () {
                if (this.message.includes('/stock=')) {
                    this.sendCommand();
                }
                else {
                    this.sendMessage();
                }
            },
            addMessageToPanel: function (newMessage) {
                if (this.messageList.length == 50) {
                    this.messageList.pop();
                }
                newMessage.IsUserMessage = true;
                newMessage.sendDate = new Date(newMessage.sendDate).toLocaleString("en-US");
                this.messageList = [newMessage, ... this.messageList];
            },
            addBotMessageToPanel: function (newBotMessage) {
                if (this.messageList.length == 50) {
                    this.messageList.pop();
                }
                newBotMessage.sendDate = new Date(newBotMessage.sendDate).toLocaleString("en-US");
                newBotMessage.IsUserMessage = false;
                this.messageList = [newBotMessage, ... this.messageList];
            },
            postData: function (url, body) {
                return $.ajax(url,
                    {
                        data: JSON.stringify(body),
                        contentType: 'application/json',
                        type: 'POST'
                    });
            },
            ShowRegister: function () {
                this.showRegister = true;
            },
            ShowLogin: function () {
                this.showRegister = false;
            },
            Login: function () {

            },
            Register: function () {

            }
        }
    });

    app.getChatMessages();

    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

    connection.on("UserSentMessage", function (newMessage) {
        app.addMessageToPanel(newMessage);
    });

    connection.on("BotSentMessage", function (newMessage) {
        app.addBotMessageToPanel(newMessage);
    });

    connection.start()

</script>